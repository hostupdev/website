---
import type { CollectionEntry } from "astro:content";
import DocCard from "./doc_card.astro";

export interface Props {
	category: CollectionEntry<"docCategories">;
	docs: CollectionEntry<"docs">[];
	categoryKey: string;
}

const { category, docs, categoryKey } = Astro.props;
---

<div id={categoryKey} data-category={categoryKey} class="scroll-mt-20">
	<div class="flex items-center space-x-4 mb-8 max-sm:space-x-2 max-sm:mb-4">
		<div class={`w-12 h-12 ${category.data.bgColor} border rounded-xl flex items-center justify-center text-lg max-sm:w-8 max-sm:h-8 max-sm:text-base`}>
			{category.data.icon}
		</div>
		<div>
			<h3 class={`text-2xl font-semibold ${category.data.textColor} mb-1 max-sm:text-lg`}>
				{category.data.title}
			</h3>
			<p class="text-on-background/60 max-sm:text-xs">
				{category.data.description} â€¢ {docs.length} {docs.length === 1 ? 'doc' : 'docs'}
			</p>
		</div>
	</div>
	
	<div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3 max-sm:gap-2">
		{docs.map(doc => (
			<DocCard doc={doc} category={category} variant="compact" />
		))}
	</div>
</div> 