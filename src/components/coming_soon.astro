---
interface Props {
	title?: string;
	description?: string;
	size?: "sm" | "md" | "lg";
	showProgress?: boolean;
	expectedDate?: string;
}

const {
	title = "Coming Soon",
	description = "This feature is currently under development.",
	size = "md",
	showProgress = true,
	expectedDate,
} = Astro.props;

const sizeClasses = {
	sm: "p-6",
	md: "p-8",
	lg: "p-12",
};

const iconSizes = {
	sm: "w-8 h-8",
	md: "w-12 h-12",
	lg: "w-16 h-16",
};

const titleSizes = {
	sm: "text-lg",
	md: "text-xl",
	lg: "text-2xl",
};
---

<div class={`bg-surface/40 backdrop-blur-sm rounded-xl border border-surface-variant/30 ${sizeClasses[size]} text-center`}>
  <!-- Icon -->
  <div class="flex justify-center mb-4">
    <div class={`bg-gradient-to-br from-primary/20 to-accent/20 rounded-full flex items-center justify-center ${iconSizes[size]} animate-pulse`}>
      <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
      </svg>
    </div>
  </div>

  <!-- Content -->
  <div class="space-y-3">
    <h3 class={`font-semibold text-on-background ${titleSizes[size]}`}>
      {title}
    </h3>
    <p class="text-on-background/70 text-sm">
      {description}
    </p>

    {showProgress && (
      <div class="space-y-2">
        <div class="flex items-center justify-center space-x-2 text-xs text-on-background/50">
          <div class="w-2 h-2 bg-accent rounded-full animate-pulse"></div>
          <span>In Development</span>
          <div class="w-2 h-2 bg-primary rounded-full animate-pulse" style="animation-delay: 0.5s;"></div>
        </div>
        
        {expectedDate && (
          <div class="inline-flex items-center space-x-1 text-xs text-on-background/50 bg-surface/40 px-3 py-1 rounded-full border border-surface-variant/20">
            <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span>Expected: {expectedDate}</span>
          </div>
        )}
      </div>
    )}
  </div>
</div> 